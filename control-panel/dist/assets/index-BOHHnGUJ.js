(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();class r{constructor(){this.config={overlayServerUrl:"http://localhost:3002",wsUrl:"ws://localhost:3002",updateInterval:1e3},this.websocket=null,this.isConnected=!1,this.lastClientData=null,this.lastServerData=null,this.overlaySettings=this.loadSettings(),this.init()}init(){this.setupEventListeners(),this.setupWebSocket(),this.loadAvailablePlaceholders(),this.updateUI(),this.startDataRefresh()}setupEventListeners(){document.querySelectorAll(".nav-item").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tab;this.switchTab(t)})}),this.setupSettingsListeners(),document.getElementById("refresh-data").addEventListener("click",()=>this.refreshData()),document.getElementById("export-config").addEventListener("click",()=>this.exportConfig()),document.getElementById("import-config").addEventListener("click",()=>this.importConfig()),document.getElementById("refresh-preview").addEventListener("click",()=>this.refreshPreview()),document.getElementById("fullscreen-preview").addEventListener("click",()=>this.fullscreenPreview()),document.querySelector(".modal-close").addEventListener("click",()=>this.closeModal()),document.querySelectorAll('input[type="range"]').forEach(e=>{e.addEventListener("input",t=>{const s=t.target.nextElementSibling;s&&s.classList.contains("range-value")&&(s.textContent=t.target.value+(t.target.id.includes("opacity")?"%":""))})})}setupSettingsListeners(){document.getElementById("overlay-theme").addEventListener("change",e=>{this.overlaySettings.theme=e.target.value,this.saveSettings(),this.updateOverlay()}),document.getElementById("primary-color").addEventListener("change",e=>{this.overlaySettings.primaryColor=e.target.value,this.saveSettings(),this.updateOverlay()}),document.getElementById("background-opacity").addEventListener("input",e=>{this.overlaySettings.backgroundOpacity=e.target.value,this.saveSettings(),this.updateOverlay()}),document.getElementById("overlay-position").addEventListener("change",e=>{this.overlaySettings.position=e.target.value,this.saveSettings(),this.updateOverlay()}),document.getElementById("overlay-scale").addEventListener("input",e=>{this.overlaySettings.scale=e.target.value,this.saveSettings(),this.updateOverlay()}),["coordinates","health","server-info"].forEach(e=>{document.getElementById(`show-${e}`).addEventListener("change",t=>{this.overlaySettings.elements[e].visible=t.target.checked,this.saveSettings(),this.updateOverlay()})}),["client-data","server-data"].forEach(e=>{document.getElementById(`enable-${e}`).addEventListener("change",t=>{this.overlaySettings.dataCollection[e.replace("-","")]=t.target.checked,this.saveSettings(),this.sendConfigUpdate()})})}setupWebSocket(){try{this.websocket=new WebSocket(this.config.wsUrl+"/control-panel"),this.websocket.onopen=()=>{console.log("Connected to overlay server"),this.isConnected=!0,this.updateConnectionStatus()},this.websocket.onmessage=e=>{try{const t=JSON.parse(e.data);this.handleWebSocketMessage(t)}catch(t){console.error("Error parsing WebSocket message:",t)}},this.websocket.onclose=()=>{console.log("Disconnected from overlay server"),this.isConnected=!1,this.updateConnectionStatus(),setTimeout(()=>this.setupWebSocket(),5e3)},this.websocket.onerror=e=>{console.error("WebSocket error:",e),this.isConnected=!1,this.updateConnectionStatus()}}catch(e){console.error("Failed to create WebSocket connection:",e),this.isConnected=!1,this.updateConnectionStatus()}}handleWebSocketMessage(e){switch(e.type){case"client_data":this.lastClientData=e,this.updateClientDataDisplay();break;case"server_data":this.lastServerData=e,this.updateServerDataDisplay();break;case"placeholder_data":this.updatePlaceholderPreview(e);break;case"config_update":this.handleConfigUpdate(e);break}}updateConnectionStatus(){const e=document.getElementById("connection-indicator"),t=document.getElementById("connection-text");this.isConnected?(e.className="status-indicator online",t.textContent="Connected"):(e.className="status-indicator offline",t.textContent="Disconnected")}updateClientDataDisplay(){if(!this.lastClientData)return;const e=this.lastClientData;if(e.coordinates){const t=`${e.coordinates.x}, ${e.coordinates.y}, ${e.coordinates.z}`;document.getElementById("player-coords").textContent=t}if(e.health&&(document.getElementById("player-health").textContent=`${e.health.health}/${e.health.maxHealth}`),e.dimension){const t=e.dimension.replace("minecraft:","").replace("_"," ");document.getElementById("player-dimension").textContent=t.charAt(0).toUpperCase()+t.slice(1)}document.getElementById("client-status").textContent="Connected",document.getElementById("client-status").className="value status-online",document.getElementById("client-last-update").textContent=new Date().toLocaleTimeString()}updateServerDataDisplay(){if(!this.lastServerData)return;const e=this.lastServerData;e.serverStats&&(document.getElementById("players-online").textContent=`${e.serverStats.onlinePlayers}/${e.serverStats.maxPlayers}`,e.serverStats.memoryUsagePercent&&(document.getElementById("memory-usage").textContent=`${Math.round(e.serverStats.memoryUsagePercent)}%`)),e.tps&&(document.getElementById("server-tps").textContent=e.tps.tps1m.toFixed(1)),document.getElementById("server-status").textContent="Connected",document.getElementById("server-status").className="value status-online",document.getElementById("server-last-update").textContent=new Date().toLocaleTimeString()}switchTab(e){document.querySelectorAll(".nav-item").forEach(t=>{t.classList.remove("active")}),document.querySelector(`[data-tab="${e}"]`).classList.add("active"),document.querySelectorAll(".tab-content").forEach(t=>{t.classList.remove("active")}),document.getElementById(e).classList.add("active"),e==="preview"&&this.refreshPreview()}loadAvailablePlaceholders(){const e=["%player_name%","%player_displayname%","%player_health%","%player_max_health%","%player_food_level%","%player_level%","%player_exp%","%player_gamemode%","%player_world%","%player_ping%","%server_name%","%server_online%","%server_max_players%","%server_tps%","%world_name%","%world_time%","%world_weather%","%overlay_enabled%","%overlay_server_status%","%overlay_tps_1m%","%overlay_tps_5m%","%overlay_tps_15m%","%overlay_memory_used%","%overlay_memory_max%","%overlay_memory_usage_percent%"],t=document.getElementById("available-placeholders");t.innerHTML="",e.forEach(s=>{const n=document.createElement("div");n.className="placeholder-item",n.innerHTML=`
                <span>${s}</span>
                <button class="btn btn-small" onclick="controlPanel.addPlaceholderToOverlay('${s}')">Add</button>
            `,t.appendChild(n)})}addPlaceholderToOverlay(e){this.overlaySettings.placeholders.includes(e)||(this.overlaySettings.placeholders.push(e),this.saveSettings(),this.updateCustomPlaceholdersList(),this.sendConfigUpdate())}addCustomPlaceholder(){const e=document.getElementById("new-placeholder"),t=e.value.trim();t&&!this.overlaySettings.placeholders.includes(t)&&(this.overlaySettings.placeholders.push(t),this.saveSettings(),this.updateCustomPlaceholdersList(),this.sendConfigUpdate(),e.value="")}updateCustomPlaceholdersList(){const e=document.getElementById("custom-placeholders");e.innerHTML="",this.overlaySettings.placeholders.forEach((t,s)=>{const n=document.createElement("div");n.className="placeholder-item",n.innerHTML=`
                <span>${t}</span>
                <button class="btn btn-small" onclick="controlPanel.removePlaceholder(${s})">Remove</button>
            `,e.appendChild(n)})}removePlaceholder(e){this.overlaySettings.placeholders.splice(e,1),this.saveSettings(),this.updateCustomPlaceholdersList(),this.sendConfigUpdate()}updatePlaceholderPreview(e){const t=document.getElementById("placeholder-preview");t.innerHTML="",e.placeholders&&Object.entries(e.placeholders).forEach(([s,n])=>{const o=document.createElement("div");o.innerHTML=`<strong>${s}:</strong> ${n}`,t.appendChild(o)})}refreshPreview(){const e=document.getElementById("overlay-preview");e.src=this.config.overlayServerUrl+"/overlay-preview"}fullscreenPreview(){const e=this.config.overlayServerUrl+"/overlay-preview";window.open(e,"_blank","fullscreen=yes")}configureElement(e){const t=document.getElementById("element-config-modal"),s=document.getElementById("modal-title"),n=document.getElementById("modal-body");s.textContent=`Configure ${e.charAt(0).toUpperCase()+e.slice(1)}`,n.innerHTML=this.generateElementConfigForm(e),t.classList.add("active")}generateElementConfigForm(e){const t=this.overlaySettings.elements[e]||{};return`
            <div class="form-group">
                <label for="element-x">X Position:</label>
                <input type="number" id="element-x" value="${t.x||0}">
            </div>
            <div class="form-group">
                <label for="element-y">Y Position:</label>
                <input type="number" id="element-y" value="${t.y||0}">
            </div>
            <div class="form-group">
                <label for="element-size">Font Size:</label>
                <input type="number" id="element-size" value="${t.fontSize||16}" min="8" max="48">
            </div>
            <div class="form-group">
                <label for="element-color">Text Color:</label>
                <input type="color" id="element-color" value="${t.color||"#FFFFFF"}">
            </div>
            <div class="form-group">
                <label class="toggle">
                    <input type="checkbox" id="element-shadow" ${t.shadow?"checked":""}>
                    <span class="toggle-slider"></span>
                    Text Shadow
                </label>
            </div>
        `}saveElementConfig(){this.closeModal()}closeModal(){document.getElementById("element-config-modal").classList.remove("active")}loadSettings(){const e={theme:"dark",primaryColor:"#FFCC00",backgroundOpacity:70,position:"top-right",scale:100,elements:{coordinates:{visible:!0,x:10,y:10,fontSize:16,color:"#FFFFFF"},health:{visible:!0,x:10,y:40,fontSize:16,color:"#FF0000"},"server-info":{visible:!0,x:10,y:70,fontSize:14,color:"#FFCC00"}},dataCollection:{clientdata:!0,serverdata:!0},placeholders:[]};try{const t=localStorage.getItem("overlaySettings");return t?{...e,...JSON.parse(t)}:e}catch{return e}}saveSettings(){localStorage.setItem("overlaySettings",JSON.stringify(this.overlaySettings))}updateOverlay(){this.sendConfigUpdate()}sendConfigUpdate(){this.websocket&&this.websocket.readyState===WebSocket.OPEN&&this.websocket.send(JSON.stringify({type:"config_update",settings:this.overlaySettings}))}refreshData(){this.websocket&&this.websocket.readyState===WebSocket.OPEN&&this.websocket.send(JSON.stringify({type:"refresh_request"}))}exportConfig(){const e={settings:this.overlaySettings,timestamp:new Date().toISOString()},t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),s=URL.createObjectURL(t),n=document.createElement("a");n.href=s,n.download="overlay-config.json",n.click(),URL.revokeObjectURL(s)}importConfig(){const e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=t=>{const s=t.target.files[0];if(s){const n=new FileReader;n.onload=o=>{try{const a=JSON.parse(o.target.result);a.settings&&(this.overlaySettings=a.settings,this.saveSettings(),this.updateUI(),this.updateOverlay(),alert("Configuration imported successfully!"))}catch(a){alert("Error importing configuration: "+a.message)}},n.readAsText(s)}},e.click()}updateUI(){document.getElementById("overlay-theme").value=this.overlaySettings.theme,document.getElementById("primary-color").value=this.overlaySettings.primaryColor,document.getElementById("background-opacity").value=this.overlaySettings.backgroundOpacity,document.getElementById("overlay-position").value=this.overlaySettings.position,document.getElementById("overlay-scale").value=this.overlaySettings.scale,Object.entries(this.overlaySettings.elements).forEach(([e,t])=>{const s=document.getElementById(`show-${e}`);s&&(s.checked=t.visible)}),document.getElementById("enable-client-data").checked=this.overlaySettings.dataCollection.clientdata,document.getElementById("enable-server-data").checked=this.overlaySettings.dataCollection.serverdata,this.updateCustomPlaceholdersList(),document.querySelectorAll('input[type="range"]').forEach(e=>{const t=e.nextElementSibling;t&&t.classList.contains("range-value")&&(t.textContent=e.value+(e.id.includes("opacity")?"%":""))})}startDataRefresh(){setInterval(()=>{this.isConnected&&this.refreshData()},this.config.updateInterval)}}window.configureElement=l=>i.configureElement(l);window.addCustomPlaceholder=()=>i.addCustomPlaceholder();window.closeModal=()=>i.closeModal();window.saveElementConfig=()=>i.saveElementConfig();const i=new r;window.controlPanel=i;
